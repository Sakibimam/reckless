[profile.default]
src = "src"
out = "out"
libs = ["lib"]
test = "test"
cache_path = "cache"

# Solidity compiler settings
solc_version = "0.8.20"
optimizer = true
optimizer_runs = 200
via_ir = false
bytecode_hash = "none"
cbor_metadata = false

# EVM version
evm_version = "paris"

# Compiler remappings
remappings = [
    "@openzeppelin/=lib/openzeppelin-contracts/",
    "@layerzerolabs/=lib/LayerZero/",
    "forge-std/=lib/forge-std/src/",
    "ds-test/=lib/ds-test/src/"
]

# Gas reporting
gas_reports = ["*"]
gas_reports_ignore = ["test/**/*"]

# Testing configuration
verbosity = 2
fuzz = { runs = 256 }
invariant = { runs = 256, depth = 15 }

# RPC endpoints
[rpc_endpoints]
mainnet = "${MAINNET_RPC_URL}"
base = "${BASE_RPC_URL}"
arbitrum = "${ARBITRUM_RPC_URL}"
polygon = "${POLYGON_RPC_URL}"
optimism = "${OPTIMISM_RPC_URL}"
base_sepolia = "${BASE_SEPOLIA_RPC_URL}"
sepolia = "${SEPOLIA_RPC_URL}"

# Etherscan API keys for verification
[etherscan]
mainnet = { key = "${ETHERSCAN_API_KEY}" }
base = { key = "${BASESCAN_API_KEY}" }
arbitrum = { key = "${ARBISCAN_API_KEY}" }
polygon = { key = "${POLYGONSCAN_API_KEY}" }
optimism = { key = "${OPTIMISTIC_ETHERSCAN_API_KEY}" }
base_sepolia = { key = "${BASESCAN_API_KEY}" }
sepolia = { key = "${ETHERSCAN_API_KEY}" }

# Profile for production deployment
[profile.production]
optimizer_runs = 1000
via_ir = true
bytecode_hash = "ipfs"

# Profile for testing  
[profile.test]
optimizer = false
verbosity = 3

# Profile for CI
[profile.ci]
fuzz = { runs = 10000 }
invariant = { runs = 1000, depth = 50 }

# Formatting
[fmt]
line_length = 100
tab_width = 4
bracket_spacing = true
int_types = "long"